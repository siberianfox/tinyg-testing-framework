###############################################################################
#### Gcode tests
###############################################################################

---

###############################################################################
#### Start of actual data for the tests
###############################################################################

#### Global values

#### Preconditions for all tests (runs from before_all() )
precondition:

  setValues:   # These run before() all tests (test setup). Ordering is important
    - js: 1    # Should set JSON to strict mode-- for JS parsing
    - fd: 0    # Should set footer depth
    - jv: 5    # Should set JSON verbosity to max
    - tv: 1    # Should set text to verbose
    - qv: 0    # Should turn queue reports off
    - sv: 1    # Should set status report verbosity to filtered
    - si: 100  # Should set status interval

  setValuesEach: # These run before each test. Try to keep this short -- it makes debugging harder


###############################################################################
#### Parameter tests
###############################################################################
##
# Syntax:
#   description: [string] the name of the test as displayed (will be grepped on)
#   setup: [array] the list of key/values to set and gcode to execute before running the test.
#            [string] If a value of the array is a string, it'll be sent as code.
#                     All gcode strings that are together will be sent together.
#                     Note: When gcode is sent it will wait for status to return as 3.
#                     Add an "{sr:n}" as the last line if there would normally not be an sr sent.
#            [object] If the value is an object of one or more key: value pairs, then the set command
#                     will be used to send them, and each one will wait for a response before the next is sent.
#   setup_timeout: [number] Number of milliseconds (seconds * 1000) to wait before giving up on ALL setup commands
#   gcode: [array or string] The given value will be sent as a block of gcode.
#           (See note below about inline commands and checks.)
#   gcode_file: [string] The file path given (relative to the test script) will be opened and sent as a gcode block.
#                (See note below about inline commands and checks.)
#   timeout: [number] Number of milliseconds (seconds * 1000) to wait before giving up on the entire gcode file
#   tests: [array] Each object in this array will describe a different kind of test, which will take different parameters.
#                  The tests will be documented below.
#
# Note - Inline commands and checks: (NOT IMPLEMENTED YET!!)
#   In gcode streams you can embed commands for the test harness by placing them after a ; and inside < and >
#   For example, to delay transimission of the next command after the reply for the previous command was recieved
#   by N seconds (may be a fraction) us the following line (the ; must be the first character on a line):
#     ;<delay N>
#
##
# Tests:
#  status: [number] The return of a status report containing a "stat" key with this value will satisfy this test.
#         Note that, if this is not specified, then the test will assume that a stat of 3 will indicate
#         completion of the test, but not necessarily passing.
#  position: [object] The key/value pairs will indicate that a final status report must contain pos<key>:<value>.
#         Note that, if the final status report (containing the "stat" key) does not contain a request pos<key>,
#         then an status report request {sr:n} will be sent to retrieve those values.


sendGcodeTests:

  - description: "Move to x100 y100 then back to y0 y0"
    setup_timeout: 50000  # 50 seconds
    setup:
      - jv: 5
      - g28.2 x0 y0 z0
    timeout: 50000 # 50 seconds
    gcode:
      - g0 x100 y 100
      - g0 x0 y0
    tests:
      - status: 3
      - position:
          x: 0
          y: 0
