###############################################################################
#### Startup tests
###############################################################################

---

###############################################################################
#### Start of actual data for the tests
###############################################################################

#### Global values 
min_fb: 80
min_hv: 6

#### Preconditions for all tests (runs from before_all() )
precondition:
  
  setValues:   # These run before() all tests (test setup). Ordering is important
    - js: 1    # Should set JSON to strict mode-- for JS parsing
    - ee: 0    # Should disable echo and set JSON mode	-- do this first or responses will get confused
    - js: 1    # Should set JSON to strict mode-- for JS parsing
    - fd: 0    # Should set footer depth
    - ex: 2    # Should set flow control to RTS/CTS
    - jv: 5    # Should set JSON verbosity to max
    - tv: 1    # Should set text to verbose
    - qv: 0    # Should turn queue reports off
    - sv: 1    # Should set status report verbosity to filtered
    - si: 250  # Should set status interval
    - ew: 0    # Should disable window mode
    - hv: 8    # Should set HW version to v8

  setValuesEach: # These run before each test. Try to keep this short -- it makes debugging harder
    - ee: 0    # Should disable echo and set JSON mode

  reportParameters:
    - id
    - fv
    - fb
    - cv
    - hp
    - hv

# System structure test data
sys:
  propertyList:
    - fb
    - fv
    - hv
    - ja
    - ct
    - mt
    - ej
    - jv
    - tv
    - qv
    - sv
    - si

gcodeDefaults:
  propertyList:
    - gpl
    - gun
    - gco
    - gpa
    - gdi

###############################################################################
#### Parameter tests
###############################################################################
#
# See here for parameters: http://github.com/synthetos/tinyg/wiki/...
#
# Syntax:
#
# Required: 
#   "parameters:" as an array OR "parameter:" as a string,
#   "value" as the value to send
#
# Optional:
#   "description:" will output a line of descriptive text. Ex:
#     description: "firmware build - supposed to be read-only"
#
#   "returns:" OR "exists:" OR "hasKeys:" OR "exactKeys:" (only one, or none). Cases:
#     returns: xyz    exact match for the floating point, integer or string returned
#     returns: null   exact match for null, but key must be present
#     exists: 1       any non-null matches (passes test)
#     exists: 0       null or missing value matches
#
#     hasKeys: [x, y] array of key names that must exist but other keys may also exist
#
#     exactKeys: [x, y] array of key names that must match exactly; there must be
#                       exactly those keys in the response, no more, no less
#
#   "status:" - matches return code 
#     status: 0       status = 0 means comamnd returned OK (0=OK)
#     <omitted>       same as status: 0
#     status: nnn     integer match so non-zero status can be interpreted as success
#
#     status codes ref: http://github.com/synthetos/tinyg/TinyG-Status-Codes

setParameterTests:

#  - description: "read firmware build"
  - parameter: fb
    value: null
    exists: 1
  